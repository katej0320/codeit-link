{"ast":null,"code":"var _jsxFileName = \"/Users/Kate/Desktop/react-link-service/src/contexts/ToasterProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport checkImage from '../assets/check.svg';\nimport useIsMounted from '../hooks/useIsMounted';\nimport styles from './ToasterProvider.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ICONS = {\n  info: checkImage,\n  warn: null\n};\nfunction Toast({\n  type,\n  message,\n  onClick\n}) {\n  _s();\n  const isMounted = useIsMounted(100);\n  const icon = ICONS[type];\n  const className = `${styles.Toast} ${styles[type]} ${isMounted ? styles.mounted : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: onClick,\n    children: [icon && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.Icon,\n      src: icon,\n      alt: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Toast, \"pyk+LM2BHdKDRkrlX0QDpXg3SA0=\", false, function () {\n  return [useIsMounted];\n});\n_c = Toast;\nconst ToasterContext = /*#__PURE__*/createContext();\nfunction ToasterProvider({\n  children\n}) {\n  _s2();\n  const [toasts, setToasts] = useState([]);\n  function addToast(type, message) {\n    const newToast = {\n      id: Date.now(),\n      type,\n      message\n    };\n    setToasts(prevToasts => [...prevToasts, newToast]);\n    return newToast;\n  }\n  function removeToast(id) {\n    setToasts(prevToasts => prevToasts.filter(toast => toast.id !== id));\n  }\n  function toaster(type, message) {\n    const newToast = addToast(type, message);\n    setTimeout(() => removeToast(newToast.id), 2000);\n  }\n  return /*#__PURE__*/_jsxDEV(ToasterContext.Provider, {\n    value: {\n      toaster\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ToastContainer,\n      children: toasts.map(toast => /*#__PURE__*/_jsxDEV(Toast, {\n        type: toast.type,\n        message: toast.message,\n        onClick: () => removeToast(toast.id)\n      }, toast.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s2(ToasterProvider, \"nD8TBOiFYf9ajstmZpZK2DP4rNo=\");\n_c2 = ToasterProvider;\nexport function useToaster() {\n  _s3();\n  const {\n    toaster\n  } = useContext(ToasterContext);\n  if (!toaster) {\n    throw new Error('ToastContext 안에서만 사용할 수 있습니다.');\n  }\n  return toaster;\n}\n_s3(useToaster, \"CG6t1dx6fwKbN/106wt9eWWT01I=\");\nexport default ToasterProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toast\");\n$RefreshReg$(_c2, \"ToasterProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","checkImage","useIsMounted","styles","jsxDEV","_jsxDEV","ICONS","info","warn","Toast","type","message","onClick","_s","isMounted","icon","className","mounted","children","Icon","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToasterContext","ToasterProvider","_s2","toasts","setToasts","addToast","newToast","id","Date","now","prevToasts","removeToast","filter","toast","toaster","setTimeout","Provider","value","ToastContainer","map","_c2","useToaster","_s3","Error","$RefreshReg$"],"sources":["/Users/Kate/Desktop/react-link-service/src/contexts/ToasterProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport checkImage from '../assets/check.svg';\nimport useIsMounted from '../hooks/useIsMounted';\nimport styles from './ToasterProvider.module.css';\n\nconst ICONS = {\n  info: checkImage,\n  warn: null,\n};\n\nfunction Toast({ type, message, onClick }) {\n  const isMounted = useIsMounted(100);\n  const icon = ICONS[type];\n  const className = `${styles.Toast} ${styles[type]} ${\n    isMounted ? styles.mounted : ''\n  }`;\n\n  return (\n    <div className={className} onClick={onClick}>\n      {icon && <img className={styles.Icon} src={icon} alt={type} />}\n      {message}\n    </div>\n  );\n}\n\nconst ToasterContext = createContext();\n\nfunction ToasterProvider({ children }) {\n  const [toasts, setToasts] = useState([]);\n\n  function addToast(type, message) {\n    const newToast = {\n      id: Date.now(),\n      type,\n      message,\n    };\n\n    setToasts((prevToasts) => [...prevToasts, newToast]);\n    return newToast;\n  }\n\n  function removeToast(id) {\n    setToasts((prevToasts) => prevToasts.filter((toast) => toast.id !== id));\n  }\n\n  function toaster(type, message) {\n    const newToast = addToast(type, message);\n    setTimeout(() => removeToast(newToast.id), 2000);\n  }\n\n  return (\n    <ToasterContext.Provider value={{ toaster }}>\n      {children}\n      <div className={styles.ToastContainer}>\n        {toasts.map((toast) => (\n          <Toast\n            key={toast.id}\n            type={toast.type}\n            message={toast.message}\n            onClick={() => removeToast(toast.id)}\n          />\n        ))}\n      </div>\n    </ToasterContext.Provider>\n  );\n}\n\nexport function useToaster() {\n  const { toaster } = useContext(ToasterContext);\n  if (!toaster) {\n    throw new Error('ToastContext 안에서만 사용할 수 있습니다.');\n  }\n  return toaster;\n}\n\nexport default ToasterProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}